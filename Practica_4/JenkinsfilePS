pipeline {
	agent any
	triggers {
        pollSCM('* * * * *')
	}
	
	tools { nodejs "NODEJS" }

	stages {
		stage ("Build") {
			steps {
				dir("Practica_4/web-page 2.0") {
					sh 'npm install'
					sh 'echo BUILD'
				}
			}
		}

		stage ("Clone") {
			steps {
				dir("Practica_4/web-page 2.0") {
					git branch: 'feature/practica4', credentialsId: 'git-creds', url: 'https://PSamuels19:mEIWYO8EGtp3V3Sv2yhznYmVaz3km2m9G+9z6DtGzFw@github.com/PSamuels19/SA-Practicas-1S22.git'
					sh 'echo CLONE'
				}
			}
		}

		stage ("SonarQube Analysis") {
			steps {
				dir("Practica_4/web-page 2.0") {
					withSonarQubeEnv('SonarQubePruebas') {
						//sh './gradlew sonarqube'
						sh "${scannerHome}/bin/sonar-scanner \
						-Dsonar.projectKey=Practica4-SA \
						//-Dsonar.sources=. \
						-Dsonar.host.url=http://localhost:9000 \
						-Dsonar.login=88eb1816ab2cda24f7064443db33f39a7b8532e2"
					}
					sh 'echo SONARQUBE ANALYSIS'
				}
			}
		}

		stage ("Test") {
			steps {
				dir("Practica_4/web-page 2.0") {
					sh "npm run test"
					sh 'echo TEST'
				}
			}
		}

		stage ("Deploy") {
			steps {
				dir("Practica_4/web-page 2.0") {
					sh 'ls'
					sh 'git config user.name \"PSamuels19\"'
					sh 'git config user.email \"2172857321801@ingenieria.usac.edu.gt\"'
					sh 'git checkout feature/practica4'
					sh 'git pull'
					sh 'git checkout deploy'
					sh 'git pull'
					sh 'git merge feature/practica4'
					sh 'git push'
					sh 'echo DEPLOY'
				}
			}
		}
	}
}
